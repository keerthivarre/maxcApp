{"version":3,"sources":["Screens/FirstScreen.js","components/KeyboardView.js","Screens/FillScreen.js","App.js","webpack:///./index.js?41f5"],"names":["styles","StyleSheet","create","buttonStyle","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","FirstScreen","useState","name","setName","age","setAge","problem","setProblem","number","setNumber","selected","setSelected","console","log","isAvailable","setIsAvailable","useEffect","isSmsAvailable","SMS","actualMessage","sendSms","sendWhatsapp","Linking","openURL","ScrollView","val","data","key","value","disabled","save","onNumberChange","onNameChange","onAgeChange","onProblemChange","Button","style","title","onPress","Text","container","flex","inner","padding","header","fontSize","marginBottom","textInput","height","borderColor","borderBottomWidth","btnContainer","marginTop","KeyboardAvoidingComponent","TouchableWithoutFeedback","Keyboard","dismiss","View","TextInput","placeholder","viewStyle","margin","textAlignVertical","textStyle","inputStyle","borderWidth","listStyle","FillScreen","navigation","onChangeText","keyboardType","keyboardAppearance","multiline","navigator","createStackNavigator","Start","Fill","initialRouteName","defaultNavigationOptions","registerRootComponent","App","createAppContainer"],"mappings":"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","file":"static/js/app.4a3c56a7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Text,View,StyleSheet,Button,Linking,TextInput ,ScrollView} from 'react-native';\nimport * as SMS from 'expo-sms';\nimport FillScreen from './FillScreen';\nimport { SelectList } from 'react-native-dropdown-select-list'\nimport InputScrollView from 'react-native-input-scroll-view';\n\n\n\nconst FirstScreen =()=>{\n\n    const[name,setName] = useState('');\n    const[age,setAge] = useState('');\n    const[problem,setProblem] = useState('');\n    const[number,setNumber] = useState('9083436379');\n    const [selected, setSelected] =useState('');\n    console.log(number);\n   \n    const data = [\n        {key:'1', value:'cough', disabled:false},\n        {key:'2', value:'cold'},\n        {key:'3', value:'fever'},\n        {key:'4', value:'sore throat', disabled:false},\n        {key:'5', value:'diarrhea'},\n        {key:'6', value:'fatigue'},\n        {key:'7', value:'nausea'},\n    ]\n    const [isAvailable,setIsAvailable]= useState(false);\n    useEffect (async ()=>{\n        const isSmsAvailable = await SMS.isAvailableAsync();\n        setIsAvailable(isSmsAvailable);\n\n    },[]);\n    const actualMessage = name+'\\n'+age+'\\n'+problem + '\\n'+ selected;\n    const sendSms = async()=>{\n        await SMS.sendSMSAsync(\n            number,\n            actualMessage        \n         );\n    };\n    const sendWhatsapp = async()=>{\n        //Linking.openURL('whatsapp://send?text=' + actualMessage + '&phone=' + number);\n        Linking.openURL(\n            'http://api.whatsapp.com/send?text=' + actualMessage + '&phone=' + number);\n        \n\n        \n    }\n\n    return(\n        <ScrollView>\n            <SelectList \n                 setSelected={(val) => setSelected(val)} \n                data={data} \n                save=\"value\"/>\n            <FillScreen\n                number = {number}\n                onNumberChange={setNumber}\n                name = {name}\n                onNameChange = {setName}\n                age ={age}\n                onAgeChange={setAge}\n                problem={problem}\n                onProblemChange = {setProblem}\n                />\n        {isAvailable ? <Button style={styles.buttonStyle} title= 'Send SMS' onPress={sendSms}/> :<Text>SMS not available</Text>}\n        <Button style ={styles.buttonStyle} title = \"send Whatsapp \" onPress ={sendWhatsapp} />\n\n        </ScrollView>\n    )\n\n};\n\nconst styles = StyleSheet.create({\n    buttonStyle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'green'\n     }\n});\n\nexport default FirstScreen;\n\n/*\n<TextInput \n            autoCapitalize = \"none\"\n            autoCorrect = {false}\n            placeholder = \"Enter Your Name\"\n            value={name}\n            onChangeText = {setName}\n            //onEndEditing = {onTermSubmit}\n             />\n             */ ","import React from 'react';\nimport {\n  View,\n  KeyboardAvoidingView,\n  TextInput,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  Button,\n  Keyboard,\n} from 'react-native';\nconst KeyboardAvoidingComponent = () => {\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View style={styles.inner}>\n        <Text style={styles.header}>Header</Text>\n        <TextInput placeholder=\"Username\" style={styles.textInput} />\n        <View style={styles.btnContainer}>\n          <TextInput placeholder=\"Password\" style={styles.textInput} />\n          <Button title=\"Submit\" onPress={() => null} />\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    justifyContent: 'space-around',\n  },\n  header: {\n    fontSize: 36,\n    marginBottom: 48,\n  },\n  textInput: {\n    height: 40,\n    borderColor: '#000000',\n    borderBottomWidth: 1,\n    marginBottom: 36,\n  },\n  btnContainer: {\n    backgroundColor: 'white',\n    marginTop: 12,\n  },\n});\nexport default KeyboardAvoidingComponent;","import React, { useState } from \"react\";\nimport {Text,TextInput,Button,StyleSheet,View,ScrollView} from 'react-native';\nimport InputScrollView from 'react-native-input-scroll-view';\nimport { withNavigation } from \"react-navigation\";\nimport {NavigationContainer} from '@react-navigation/native';\nimport FirstScreen from \"./FirstScreen\";\nimport { Icon } from 'react-native-elements';\nimport { SelectList } from 'react-native-dropdown-select-list'\nimport KeyboardAvoidingComponent from \"../components/KeyboardView\";\n//import {AutoGrowingTextInput} from 'react-native-autogrow-textinput';\n\nconst FillScreen=({name,age,onNameChange,onAgeChange,problem,onProblemChange,number,onNumberChange,navigation})=>{\n    //const [selected, setSelected] = React.useState(\"\");\n    KeyboardAvoidingComponent();\n    return (        \n        <ScrollView style={styles.viewStyle}>\n             <Text style = {styles.textStyle}>Enter mobile number</Text>\n             \n            <TextInput\n            style = {styles.inputStyle}\n            //KeyboardAvoidingComponent\n            placeholder=\"Enter mobile number\"\n            value={number}\n            onChangeText = {onNumberChange}/>\n\n           \n            <Text style = {styles.textStyle}>Enter Your name</Text>\n            <TextInput\n                style = {styles.inputStyle}\n                placeholder=\"Enter Your name\"\n                value={name}\n                onChangeText = {onNameChange}/>\n            <Text style = {styles.textStyle}>What is your Age</Text>\n            <TextInput\n                style = {styles.inputStyle}\n                placeholder=\"Enter your age\"\n                keyboardType='numeric'\n                keyboardAppearance='light'\n                value={age}\n                onChangeText={onAgeChange}/>\n            <Text style = {styles.textStyle}>Problem Detail</Text>\n            \n            <TextInput\n                multiline = {true}\n                style = {styles.inputStyle}\n                placeholder=\"Problem\"\n                value={problem}\n                onChangeText = {onProblemChange}/>\n            \n\n            \n\n            \n         {/*<Button style={styles.buttonStyle} title =\"Submit\" onPress = {()=> navigation.navigate('Start')}/>*/}\n\n        </ScrollView>\n        \n        \n    )\n    \n};\n\nconst styles= StyleSheet.create({\n    viewStyle:{\n        flex:1,\n        margin: 5,\n        textAlignVertical:true\n       \n\n    },\n\n    textStyle: {\n        fontSize :18,\n        margin: 10\n\n    },\n\n    inputStyle :{\n        borderRadius :5,\n        borderWidth :1,\n        height:35,\n        margin :10\n    },\n    buttonStyle : {\n        \n        borderWidth :2,\n        backgroundColor:\"green\",\n        height:35\n\n    },\n    listStyle :{\n        alignItems: \"center\"\n    }\n\n});\nexport default FillScreen;","import  {createAppContainer} from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport FillScreen from './Screens/FillScreen';\nimport FirstScreen from './Screens/FirstScreen';\nimport {registerRootComponent} from 'expo';\nimport App from './Screens/FirstScreen';\n\n\nconst navigator = createStackNavigator({\n  // createstack navigator passing two arguments (key :value , initialroutename)\n  Start : FirstScreen,\n  Fill : FillScreen\n\n}, {\n    initialRouteName: 'Start',\n    defaultNavigationOptions :{\n      title : 'chat'\n    }\n});\nregisterRootComponent(App);\nexport default createAppContainer(navigator);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});*/","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}